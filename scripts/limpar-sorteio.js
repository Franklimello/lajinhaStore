const admin = require('firebase-admin');

// Inicializar Firebase Admin
if (!admin.apps.length) {
  admin.initializeApp({
    credential: admin.credential.applicationDefault(),
    projectId: 'compreaqui-324df'
  });
}

const db = admin.firestore();

async function limparColecaoSorteio() {
  try {
    console.log('üßπ Iniciando limpeza da cole√ß√£o sorteio...');
    
    // Buscar todos os documentos da cole√ß√£o sorteio
    const sorteioRef = db.collection('sorteio');
    const snapshot = await sorteioRef.get();
    
    if (snapshot.empty) {
      console.log('‚úÖ Cole√ß√£o sorteio j√° est√° vazia');
      return;
    }
    
    console.log(`üìä Encontrados ${snapshot.size} documentos na cole√ß√£o sorteio`);
    
    // Deletar todos os documentos em lotes
    const batch = db.batch();
    let deletedCount = 0;
    
    snapshot.docs.forEach((doc) => {
      batch.delete(doc.ref);
      deletedCount++;
    });
    
    await batch.commit();
    
    console.log(`‚úÖ ${deletedCount} documentos deletados com sucesso!`);
    console.log('üéâ Cole√ß√£o sorteio limpa completamente!');
    
  } catch (error) {
    console.error('‚ùå Erro ao limpar cole√ß√£o sorteio:', error);
    throw error;
  }
}

async function verificarColecao() {
  try {
    console.log('üîç Verificando estado da cole√ß√£o sorteio...');
    
    const sorteioRef = db.collection('sorteio');
    const snapshot = await sorteioRef.limit(10).get();
    
    console.log(`üìä Documentos encontrados: ${snapshot.size}`);
    
    if (snapshot.size > 0) {
      console.log('üìã Primeiros documentos:');
      snapshot.docs.forEach((doc, index) => {
        const data = doc.data();
        console.log(`${index + 1}. ID: ${doc.id}`);
        console.log(`   Pedido: ${data.orderNumber}`);
        console.log(`   Cliente: ${data.clientName}`);
        console.log(`   Data: ${data.createdAt?.toDate?.() || 'N/A'}`);
        console.log('---');
      });
    }
    
  } catch (error) {
    console.error('‚ùå Erro ao verificar cole√ß√£o:', error);
  }
}

async function main() {
  try {
    console.log('üöÄ Script de limpeza da cole√ß√£o sorteio');
    console.log('=====================================');
    
    // Verificar estado atual
    await verificarColecao();
    
    // Confirmar limpeza
    console.log('\n‚ö†Ô∏è  ATEN√á√ÉO: Esta opera√ß√£o ir√° deletar TODOS os documentos da cole√ß√£o sorteio!');
    console.log('Pressione Ctrl+C para cancelar ou aguarde 5 segundos...');
    
    await new Promise(resolve => setTimeout(resolve, 5000));
    
    // Limpar cole√ß√£o
    await limparColecaoSorteio();
    
    // Verificar resultado
    await verificarColecao();
    
    console.log('\n‚úÖ Script conclu√≠do com sucesso!');
    
  } catch (error) {
    console.error('‚ùå Erro no script:', error);
    process.exit(1);
  } finally {
    process.exit(0);
  }
}

// Executar script
main();
